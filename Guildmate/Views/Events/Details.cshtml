@using Microsoft.AspNetCore.Identity;

@model Guildmate.Models.Event
@inject UserManager<ApplicationUser> userManager

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Event</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StartDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EndDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.MaxAttendees)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.MaxAttendees)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Guild)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Guild.Name)
        </dd>
        <ul>
            @foreach (var character in Model.CharacterEvents)
            {
                //if(Model.CharacterEvents.Contains(character.CharacterId && Model.EventId))
                <li>
                    @Html.DisplayFor(item => character.Character.Name) - @Html.DisplayFor(item => character.Role.Name)
                </li>
            }
        </ul>
    </dl>
</div>

@if (userManager.GetUserAsync(User).Result.Characters.FirstOrDefault(c => c.RankId == 1) != null)
    {
        <div>
            <a asp-action="Edit" asp-route-id="@Model.EventId">Edit</a> |
            <a asp-action="Index">Back to List</a>
        </div>
    }

<div class="EventRoster">
    <h3>Event Roster</h3>

    <a asp-action="AttendEvent" asp-route-id="@Model.EventId" asp-controller="CharacterEvents">
        <input type="hidden" value="@Model.EventId"/>
        <input type="submit" value="Attend Event" />
    </a>

    <table class="table">
        <thead>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Class
                </th>
                <th>
                    Role
                </th>

            </tr>
        </thead>
        <tbody>
            @foreach (var character in Model.CharacterEvents)
            {
                <tr class="@Html.DisplayFor(item => character.Character.ClassRace.Class.Name)Bg">
                    <td>
                        @Html.DisplayFor(item => character.Character.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(item => character.Character.ClassRace.Class.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(item => character.Role.Name)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
